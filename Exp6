%% Part 1: Cross-Correlation of Discrete Sequences (User Input)

clc; clear; close all;

% Input sequences
x = input('Enter input sequence x (as a vector): ');
h = input('Enter impulse sequence h (as a vector): ');

% Plot x(n)
figure;
subplot(3,1,1);
stem(0:length(x)-1, x, 'filled');
xlabel('n'); ylabel('x(n)');
title('Input Sequence x(n)');

% Plot h(n)
subplot(3,1,2);
stem(0:length(h)-1, h, 'filled');
xlabel('n'); ylabel('h(n)');
title('Impulse Response h(n)');

% Cross-correlation
y = xcorr(x, h);

% Plot cross-correlation
subplot(3,1,3);
stem(-(length(h)-1):(length(x)-1), y, 'filled');
xlabel('n'); ylabel('y(n)');
title('Cross-Correlation of x and h');

disp('Resultant cross-correlation:');
disp(y);

%% Part 2: Manual Cross-Correlation Between Two Sequences with Indices

clc; clear; close all;

% Input sequences and time indices
x = input('Enter sequence x(n): ');
n1 = input('Enter time indices for x(n): ');
y = input('Enter sequence y(n): ');
n2 = input('Enter time indices for y(n): ');

% Time reversal of y(n)
y_rev = fliplr(y);
n2_rev = -fliplr(n2);

% Cross-correlation computation manually
n_corr = (min(n1)+min(n2_rev)) : (max(n1)+max(n2_rev));
len_c = length(x) + length(y_rev) - 1;
c = conv(x, fliplr(y)); % convolution with flipped y is cross-correlation

% Plot
figure;
subplot(3,1,1);
stem(n1, x, 'filled');
xlabel('n'); ylabel('Amplitude');
title('Sequence x(n)');
grid on;

subplot(3,1,2);
stem(n2_rev, y_rev, 'filled');
xlabel('n'); ylabel('Amplitude');
title('Reversed Sequence y(-n)');
grid on;

subplot(3,1,3);
stem(n_corr, c, 'filled');
xlabel('n'); ylabel('Amplitude');
title('Cross-Correlation of x(n) and y(n)');
grid on;

disp('Cross-correlation:');
disp(c);
disp('Time indices:');
disp(n_corr);

%% Part 3: Cross-Correlation of Continuous Sinusoidal Signals

clc; clear; close all;

% Input frequencies
f1 = input('Enter frequency of signal 1 (Hz): ');
f2 = input('Enter frequency of signal 2 (Hz): ');

% Define time vectors
T1 = 1/f1; % Period of signal 1
t1 = 0:T1/100:T1; % Fine time resolution
x = sin(2*pi*f1*t1);

T2 = 1/f2; % Period of signal 2
t2 = 0:T2/100:T2;
y = sin(2*pi*f2*t2);

% Time reversal
y_rev = fliplr(y);
t2_rev = -fliplr(t2);

% Manual cross-correlation (continuous signals)
c = conv(x, fliplr(y), 'full') * (t1(2)-t1(1)); % dt scaling
t_corr = linspace(min(t1)+min(t2_rev), max(t1)+max(t2_rev), length(c));

% Plot
figure;
subplot(3,1,1);
plot(t1, x);
xlabel('Time (s)'); ylabel('Amplitude');
title('Signal x(t)');
grid on;

subplot(3,1,2);
plot(t2_rev, y_rev);
xlabel('Time (s)'); ylabel('Amplitude');
title('Reversed Signal y(-t)');
grid on;

subplot(3,1,3);
plot(t_corr, c);
xlabel('Time (s)'); ylabel('Amplitude');
title('Cross-Correlation of x(t) and y(t)');
grid on;

%% Part 4: Auto-Correlation Example (x[n] correlated with itself)

clc; clear; close all;

% Define signals
x = [1,2,3,4,5];
y = [4,1,5,2,6];

% Auto-correlation of x
z = xcorr(x, x);

% Plot
figure;
subplot(3,1,1);
stem(0:length(x)-1, x, 'filled');
xlabel('n'); ylabel('x(n)');
title('Input Signal x(n)');

subplot(3,1,2);
stem(0:length(y)-1, y, 'filled');
xlabel('n'); ylabel('y(n)');
title('Input Signal y(n)');

subplot(3,1,3);
stem(-(length(x)-1):(length(x)-1), z, 'filled');
xlabel('n'); ylabel('z(n)');
title('Auto-correlation of x(n)');
